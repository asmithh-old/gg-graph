import csv, pandas as pd, ast, numpy as np, mediacloud, json, itertools, random, time,mediacloud


b = [288701647, 274189080, 338571589, 288710106, 288709649, 283259932, 288701971, 338686009, 288750141, 288694340, 338728940, 288736850, 288730708, 338535026, 288748160, 270169879, 284596369, 288749405, 288701616, 283628232, 282522384, 338582319, 338700597, 288694091, 288709968, 288748407, 288749445, 288707977, 288750499, 338715556, 288750556, 338553289, 288746473, 283249659, 338583062, 288716327, 288718382, 288704530, 288704631, 338571411, 288702101, 288703647, 268562597, 288708777, 338596025, 338669761, 280836834, 288737511, 267535864, 338451738, 338581293, 338668846, 338441568, 288750448, 280721787, 338685901, 338469262, 270456736, 288723385, 288710076, 338600921, 274563326, 338604545, 338547718, 338604594, 338635827, 283207221, 288710219, 269271628, 288750524, 338604660, 338562180, 288750733, 288737450, 288747123, 338555060, 288701686, 282383620, 288701709, 288747797, 269039403, 288744246, 338488665, 76105611, 288710547, 338645399, 288713117, 269755335, 288716268, 338685439, 288710656, 269120527, 288694290, 288710168, 271859230, 288710721, 279147789, 288694357, 288750192, 338562067, 338707638, 267099255, 288730865, 338453241, 271822587, 338453246, 270342400, 285598469, 338458907, 281588529, 288744242, 338518847, 288732265, 338624855, 288736603, 288710458, 288744290, 338518914, 276942228, 296457113, 288737709, 288735154, 288701887, 338442181, 283991116, 288703417, 288715251, 288750593, 288701442, 271860243, 288701983, 268602409, 338464314, 288723641, 269817086, 288744570, 288716925, 288748163, 338652812, 281764533, 288704203, 288749269, 288704225, 288717032, 288723694, 311308567, 338453281, 271903546, 268991343, 288703865, 288710020, 271316374, 338585496, 288737204, 338406987, 288709956, 125282253, 288750546, 338466271, 281693175, 288723448, 288717318, 338654242, 338602543, 338729020, 288724041, 338453175, 287701775, 288737591, 288710457, 288737086, 288744260, 338592632, 288701837, 338433470, 288737760, 288737785, 288701645, 288730445, 288736700, 200985278, 288710363, 288737073, 288737121, 338677229]
y = [338632706, 338632714, 338575376, 338479121, 338661396, 338677422, 338669591, 288723631, 338645020, 338667555, 338677799, 338634794, 338677426, 338671663, 338729009, 338677820, 338645068, 338677840, 338677842, 338585685, 338651222, 338647128, 338653273, 338538587, 338620512, 338577505, 338647145, 338677875, 338686073, 338653306, 338677884, 338552961, 338661507, 338550916, 338677893, 338636934, 338677895, 338645132, 338634899, 338504046, 338662425, 338661532, 288704675, 338674914, 338641069, 338669752, 338729145, 338690241, 338653381, 338645190, 338669771, 338632912, 338645203, 338645204, 338645215, 338634978, 338634989, 338654248, 338651382, 338635004, 338632746, 338686213, 338635014, 338682122, 338661644, 338727187, 338669854, 338661666, 338653478, 338682151, 338714920, 338676015, 338635056, 338661681, 338669875, 338645300, 338553150, 338641217, 338661700, 338661701, 338653514, 338651467, 338669905, 338669910, 338647389, 338635102, 338624866, 338645348, 338671975, 338661737, 338669936, 338635121, 338669941, 338553207, 338659705, 338571646, 338676096, 338645739, 338553220, 338645382, 338676107, 338669973, 338680215, 338482253, 338661283, 338635167, 338676129, 338696611, 338624945, 338635190, 338670012, 338641350, 338676169, 338653642, 338653650, 338646331, 338676188, 338680287, 338645472, 338571749, 338571753, 338713068, 288717302, 338729465, 338645501, 338653695, 338637313, 288710742, 338645511, 338518536, 338559498, 338700821, 338729494, 338706521, 300677658, 338668061, 338668068, 338633256, 338703112, 338676276, 288737851, 338639420, 338526786, 338636214, 338700874, 288723539, 338677892, 288723553, 338651746, 338635367, 338635368, 338641518, 338666097, 338635378, 288723571, 338668148, 338635381, 338700921, 338635388, 338662506, 338635391, 338662017, 338645642, 338653840, 338635410, 338635416, 338668185, 288744095, 338654336, 338635436, 338711213, 338668207, 338635443, 338635446, 338635458, 338645702, 338668231, 338676432, 338653905, 338510969, 338635488, 338509013, 338645736, 338635499, 338555629, 338662127, 338707184, 338668274, 338645748, 338653941, 338645751, 338647807, 338662147, 338662153, 338629387, 338713361, 338475800, 338634884, 338512690, 338772784, 338668343, 338645822, 338635232, 338634892, 338660493, 338662228, 288750422, 338702137, 338676576, 338631522, 338504551, 338445166, 338453361, 338662258, 288723829, 338562198, 338475917, 338654094, 338624815, 338549658, 338662301, 338582432, 338676642, 338645923, 338654120, 338625449, 338502573, 338703278, 338637747, 338645942, 338654025, 338662329, 338715578, 338654139, 338654142, 338645951, 338691008, 338654146, 288750532, 338676678, 338645961, 338654154, 338482128, 338644935, 338662360, 338654169, 338693082, 338662368, 338631649, 288730086, 338676713, 338631659, 338582508, 338639856, 338674674, 338662389, 338543610, 338674685, 338476031, 288744455, 338496520, 338615313, 338662427, 338654238, 338662432, 338662433, 288713762, 338635812, 288744485, 338654246, 338635815, 338676784, 338662453, 338637879, 288750651, 288744513, 338562120, 295312459, 338662476, 338674765, 338676815, 338607184, 338625618, 338635862, 338662487, 338662488, 338662490, 288744544, 338662505, 338635882, 338658412, 338654317, 338662510, 338664569, 338668673, 338668678, 338676878, 338654352, 338625683, 338646165, 338625687, 338693275, 338463900, 338715162, 338625697, 338635939, 288708806, 338693145, 338648234, 338654381, 288750766, 338482351, 288743677, 338693316, 338658501, 338482377, 338470090, 288751043, 318155989, 338668761, 338662061, 338668776, 338668777, 338668778, 338470125, 338668782, 338654455, 338707707, 338654461, 338654421, 338676995, 338652422, 338654476, 288724248, 338654497, 338605346, 338668836, 338674990, 338668847, 338654520, 338654431, 338654528, 338677644, 338640439, 338632016, 338637710, 338648414, 338654564, 338658661, 338632038, 338654568, 338629993, 288710000, 338646394, 288750826, 338488703, 338644364, 338654445, 338660753, 338654613, 338677142, 338652571, 338707876, 338759079, 338709929, 338652587, 338677174, 334482872, 338654650, 338677322, 338677183, 338629536, 338433481, 338433484, 338464206, 338677199, 338433489, 338464210, 338676643, 338677205, 288751062, 338654679, 338677208, 338644441, 338677214, 338496993, 338677218, 294870506, 338645245, 338636281, 338753027, 338605572, 338630161, 338677276, 338677338, 338632224, 338511395, 338677291, 338700552, 338668467, 338677302, 338677303, 338679352, 338677306, 338708034, 338654791, 338644554, 338654799, 338583120, 338638094, 338665050, 338407005, 338669154, 338553058, 338644957, 338677361, 332852855, 338636415, 338677376, 288710276, 338665097, 338634393, 338488989, 338677409, 338675369, 288710315, 338652846, 338658994, 338677431, 318183097, 338583226, 338669254, 288710343, 338668834, 338708178, 338634455, 338669276, 338669278, 338659039, 288716514, 338677480, 338667246, 338676877, 338677490, 338671348, 338659064, 338450191, 338669332, 288724270, 338637103, 288716576, 338644779, 288702089, 338669876, 338691898, 338667146, 338654851, 338504004, 338669924, 338542411, 338653008, 338708315, 338653036, 338571119, 338653040, 338577266, 288710080, 338446207, 338653056, 338636673, 338669445, 338708119, 338661267, 338685894, 338669462, 288710559, 338660605, 338661062, 338635423, 338634685, 338667457, 338644934, 338708423, 338669526, 338482169, 338676953, 338679771, 338669532, 338661341, 338682193, 338669452, 301582319, 338708470, 338534057, 338708483, 338535084, 338661387, 338593804, 338458639, 338708513, 338728996, 338681907, 338708532, 338686010, 338700349, 338561088, 338693187, 338446403, 338686021, 338700360, 338458719, 338700386, 338610295, 338708159, 288710781, 338645119, 338452622, 289438064, 288737444, 338634679, 338704571, 288723140, 338714657, 338565322, 288744482, 338686167, 338637027, 312230117, 338708519, 338553077, 338686199, 338706689, 338573576, 338684175, 338716950, 338686340, 338700590, 338686265, 338714940, 338700623, 338700627, 338706780, 338561377, 338684268, 338706797, 288717166, 338686319, 338704758, 338645388, 338686352, 338622867, 338713327, 338706861, 338452910, 338706868, 288743861, 338670010, 338577853, 338700735, 338682304, 338700737, 338700741, 338635853, 297941465, 338682337, 338700907, 338696691, 338729476, 338693208, 338686483, 338635296, 338716763, 338706999, 338700856, 338534975, 338625094, 338700871, 338702938, 338713181, 333283946, 338692715, 338526831, 338713770, 338463366, 288729735, 287963784, 338713227, 284121743, 288730563, 338700943, 338446425, 338635427, 338588326, 338707120, 338635441, 338692788, 338692789, 338488778, 338614974, 338713279, 338692813, 288717522, 338684628, 338561755, 338535145, 338669492, 338707197, 338713344, 338646144, 338453258, 338707218, 338463510, 338692890, 338475808, 338670384, 338713379, 320895780, 338475813, 338692905, 338453290, 338689502, 338707281, 338482318, 288744552, 338715486, 338693264, 338735971, 338686326, 338692972, 338625398, 338685418, 303893374, 338664597, 288729988, 338475913, 338736015, 338705302, 287298457, 338496421, 338464215, 338527152, 338615221, 338699192, 338662333, 338654149, 291685629, 338703314, 338700451, 288730069, 338646181, 338699251, 338693108, 288750582, 338715817, 338633720, 338691065, 338645503, 338693116, 338703369, 338705419, 288730285, 288701456, 338469908, 338736150, 338582553, 338727962, 338482207, 338693162, 338662463, 338719808, 288750659, 338693188, 338685110, 280469345, 338699348, 338693205, 338625633, 338651123, 288724071, 338463848, 338693233, 316389907, 338715764, 338699384, 338697342, 338576512, 338609282, 338654339, 338700823, 338670733, 338699907, 288750742, 338562206, 338707996, 338553031, 338699444, 338676918, 338693305, 338685472, 288743627, 338722337, 338674897, 338676952, 338562271, 338470115, 338715876, 338700592, 338476012, 338543857, 338717944, 338689285, 288752904, 338571479, 338470158, 338723032, 338690947, 338685204, 338715926, 288750809, 338654503, 338658601, 338726188, 338693427, 338441527, 338722116, 338662285, 338571832, 338722136, 338703713, 338736487, 338464108, 338693489, 338626110, 338700523, 338718090, 338684435, 338707690, 285822366, 288716191, 338693541, 338644397, 338715549, 338729036, 288749470, 338556347, 338654656, 338585027, 283301317, 312708552, 338433477, 338654682, 338711443, 338585056, 338568096, 338683374, 338717267, 288701947, 288755285, 288755202, 338683401, 338546189, 338734611, 338640404, 338707989, 338469896, 338677679, 338482096, 288730661, 338654093, 338773545, 338570794, 338589171, 338701872, 338632242, 338708404, 338543883, 338715574, 288744375, 338700898, 338691001, 280276591, 288751218, 338686227, 338722420, 288709567, 338685565, 286211008, 338695813, 338708039, 338632337, 338693241, 338681932, 338496454, 338620070, 338677416, 338712245, 338683589, 338669256, 338499829, 288750884, 281730525, 284866272, 338712297, 264781549, 338691369, 338700927, 338458379, 338683662, 338695954, 338453333, 338715609, 288741148, 338669345, 338683690, 281319215, 338615598, 338683737, 338685790, 338685795, 338548584, 338458942, 338715625, 288716666, 283647869, 338700169, 338550668, 338685842, 275479876, 338693295, 338685854, 338722723, 338708388, 338685861, 338714609, 338446254, 338685873, 288750579, 338728884, 338708407, 338708408, 338669497, 338470219, 338708421, 338654470, 338685904, 338661368, 338692771, 338722776, 338686024, 338442235, 338458623, 338616338, 338446373, 338458737, 338684069, 338700454, 288694488, 338700510, 338553147, 338698626, 338686345, 315083162, 338659828, 288723459, 338717783, 338715186, 279680811, 338692835, 269079294, 338635905, 288729864, 288709405, 338561831, 338692907, 338632157, 338508624, 338504579, 338668437, 338715550, 338586671, 288701496, 338713777, 288750818, 338562292, 279262464, 333286693, 338700850, 338441534, 338715881, 338488746, 338683339, 268662235, 338699741, 338683369, 338677484, 338583102, 338677340, 338685557, 288751235, 288702143, 338489033, 333295340, 338689180, 338702077, 288710074, 338668851, 338685404, 92198720, 338700129, 338446178, 288737517, 338685937, 338704723, 338446426, 338567402, 274202965, 338479543, 338518609, 338518834, 338742092, 338654068, 338453395, 338539560, 338482275, 325741078, 338463944, 288743650, 338716019, 323920972, 338513482, 338577330, 272379874, 338482187, 288743819, 288723497, 338433411]
n = [288716428, 288710707, 297949280, 322226280, 288710774, 338634889, 288709656, 288736969, 288717150, 288708976, 284840342, 288717247, 288723463, 288717455, 288713379, 288713485, 289409919, 338535315, 292475841, 288730097, 338476021, 338469888, 338453519, 288709663, 288713784, 289410119, 288701967, 288724069, 276882607, 338463968, 288709887, 288709901, 338464032, 274427183, 288709970, 288724317, 338677181, 288701889, 288716237, 288694181, 338488801, 288708080, 281759229, 288704016, 318486100, 288716444, 288723234, 288710354, 288716518, 338446081, 338669341, 338503495, 284078735, 338659191, 288716706, 338496497, 288716792, 338729008, 288710714, 288718931, 282857595, 281954462, 338698406, 338553042, 338553045, 338729189, 338635012, 270356744, 338571541, 288717081, 288708898, 338553125, 288717096, 338728794, 288723335, 288737682, 338727328, 338454945, 288704945, 338553296, 338571774, 338571777, 88736304, 288737886, 338577181, 338475699, 288703164, 338466934, 288729798, 338615012, 288709358, 338647791, 288715222, 288716249, 288723748, 338496312, 338543427, 288729961, 338561902, 338568061, 338463619, 285721502, 288744353, 338721776, 338469880, 281543709, 338562085, 338482217, 338625612, 288701517, 288701518, 282987656, 288726188, 338715821, 288732359, 338470095, 338717905, 338482394, 288701661, 338734305, 288701669, 288750825, 288709866, 338689270, 338482423, 338464019, 338464020, 338560298, 288709985, 338441575, 338716016, 338554245, 338716057, 338634380, 288736678, 288736682, 288736704, 338722246, 338722264, 288736734, 338607614, 288726530, 288708114, 338583090, 288730711, 281734744, 338660957, 338442173, 338726530, 288710277, 338583184, 338546323, 288736939, 288702145, 338722505, 338566874, 338435366, 338722558, 288743226, 281542462, 338722706, 338446237, 267111408, 338625862, 338722734, 288694193, 288710589, 288743359, 338716609, 288737246, 288743432, 281770009, 288694321, 338548063, 281540697, 338593906, 288694397, 338458765, 338552994, 308584621, 338553033, 338553067, 288704748, 281534714, 288743682, 338561300, 285942042, 288694558, 288717087, 281905440, 338444592, 338479409, 288756018, 288743734, 288717112, 338553171, 338553185, 338698595, 288737644, 338571635, 329460084, 338553227, 338553239, 278813082, 338571679, 338553255, 338571692, 281731512, 295039437, 288737757, 338475490, 298138023, 288724050, 281737738, 338571801, 271796770, 284000806, 294107693, 318095924, 338597254, 271016554, 281705084, 338412191, 338446271, 338526891, 338576082, 338453205, 338490148, 338453214, 288717537, 288723692, 285885174, 288729860, 338549513, 288723726, 288744225, 338535202, 338518831, 281774908, 285244235, 338561885, 288723813, 288723825, 320119668, 338625408, 306817924, 338561934, 338527161, 338445268, 338464249, 338482144, 338543606, 338582531, 338631700, 338549781, 281725975, 294218776, 285912100, 288730154, 288744500, 338465855, 288730184, 286506094, 338562161, 338508914, 338559510, 324080777, 338562193, 338482323, 288730260, 338510997, 285070491, 338562207, 269059241, 338470065, 338615485, 281644255, 338549995, 338595061, 338582808, 338615578, 338582814, 288714038, 338441530, 338464070, 338441555, 288701783, 338464091, 295706525, 338576762, 338435451, 338546047, 285543814, 338548116, 338464175, 288701878, 242742718, 338488791, 287962585, 338562522, 338433507, 338593273, 338583036, 338603530, 288710159, 285115926, 288751134, 307394101, 286150218, 326405707, 288702057, 338488945, 288716411, 271736451, 338550436, 275173032, 281022128, 338603976, 338450117, 338620110, 288710356, 293220059, 284876520, 288743152, 338560774, 338446106, 281558823, 288694238, 338446170, 288710494, 288694119, 288694152, 306978802, 288694199, 338446280, 338513904, 281730728, 288694258, 338601974, 288710732, 338645141, 288694472, 288743712, 338645303, 338452979, 281680379, 288717316, 288737814, 338475604, 288694421, 288750237, 288704973, 288744496, 288709714, 288703707, 338554150, 288701663, 288730432, 288701791, 288741004, 288716436, 283078533, 338474932, 338708427, 338645462, 288750360, 288749196, 288749446]

# api_key = '1418b32a4e8140745240fa0b855060963c9939749bdd5562ee1b62590660b0fb'
# mc = mediacloud.api.AdminMediaCloud(api_key)
# def tfidf(all_story_ids):
#     all_tf = {}
#     global_cat_tf = {}
#     global_cat_idf = {}
#     global_num_words = 0
#     count = 0
#     for story_id in all_story_ids:
#         print float(count)/float(len(all_story_ids))
#         count += 1
#         num_words = 0
#         story_words = {}
#         tf = {}
#         idf = {}
#         print 'getting sentences'
#         try:
#             for k in mc.storyCoreNlpList(story_id)[0]['corenlp'].keys():
#                 tokens = mc.storyCoreNlpList(story_id)[0]['corenlp'][k]['corenlp']['sentences'][0]['tokens']
#                 where = 0
#                 #print tokens
#                 for i in tokens:
#                     num_words += 1
#                     global_num_words += 1
#                     if len(i['word']) == 1:
#                         del tokens[where]
#                     where += 1
#                     if i['word'] in story_words:
#                         story_words[i['word']] += 1
#                     else:
#                         story_words[i['word']] = 1
#                     if i['word'] in global_cat_tf:
#                         global_cat_tf[i['word']] += 1
#                     else:
#                         global_cat_tf[i['word']] = 1
#                     if i['word'] not in idf:
#                         idf[i['word']] = 1
#             for word in idf:
#                 if word in global_cat_idf:
#                     global_cat_idf[word] += 1
#                 else:
#                     global_cat_idf[word] = 1
#             tf = {k: float(story_words[k])/float(num_words) for k in story_words.keys()}
#             max_tf = tf[max(story_words.keys(), key = lambda x:story_words[x])]
#             tf = {k: float(tf[k])/float(max_tf) for k in tf.keys()}
#             all_tf[story_id] = tf
#         except:
#             print story_id
#             print
#             print
#     global_cat_idf = {k: np.log2(float(global_cat_idf[k])/float(len(all_story_ids))) for k in global_cat_idf.keys()}
#     global_cat_tf = {k: float(global_cat_tf[k])/float(global_num_words) for k in global_cat_tf.keys()}
#     max_global_cat_tf = global_cat_tf[max(global_cat_tf.keys(), key = lambda x: global_cat_tf[x])]
#     global_cat_tf = {k: global_cat_tf[k]/max_global_cat_tf for k in global_cat_tf.keys()}
#     return (global_cat_idf, global_cat_tf)

# print 'doing tf-idf'
# (b_idf, b_tf) = tfidf(random.sample(b, 30))
# (y_idf, y_tf) = tfidf(random.sample(y, 30))
# (n_idf, n_tf) = tfidf(random.sample(n, 30))
with open('gg-text-data-mutual.txt') as f:
    content = f.readlines()
    b_idf = ast.literal_eval(content[0])
    b_tf = ast.literal_eval(content[1])
    y_idf = ast.literal_eval(content[2])
    y_tf = ast.literal_eval(content[3])
    n_idf = ast.literal_eval(content[4])
    n_tf = ast.literal_eval(content[5])
# with open('gg-text-data-mutual.txt', 'w') as f:
#     f.write(str(b_idf))
#     f.write('\n')
#     f.write(str(b_tf))
#     f.write('\n')
#     f.write(str(y_idf))
#     f.write('\n')
#     f.write(str(y_tf))
#     f.write('\n')
#     f.write(str(n_idf))
#     f.write('\n')
#     f.write(str(n_tf))
#     f.write('\n')
#     f.close()
def use_tfidf(cat_tf, other_idf):
    word_freq = {}
    for w in cat_tf.keys():
        if w in other_idf:
            word_freq[w] = cat_tf[w] * other_idf[w]
    return sorted(word_freq.keys(), key = lambda x: word_freq[x], reverse = True)[0:20]

print 'distinguishes gamergate from anti-gg'
print use_tfidf(y_tf, n_idf)
print
print 'distinguishes gamergate from mutually linked coverage'
print use_tfidf(y_tf, b_idf)
print
print 'distinguishes anti-gg from gamergate'
print use_tfidf(n_tf, y_idf)
print
print 'distinguishes anti-gg from mutually linked coverage'
print use_tfidf(n_tf, b_idf)
print
print 'distinguishes mutually-linked coverage from exclusively anti-gg-linked coverage'
print use_tfidf(b_tf, n_idf)
print
print 'distinguishes mutually-linked coverage from exclusively gg-linked coverage.'
print use_tfidf(b_tf, y_idf)


#what words most distinguish a from b?
